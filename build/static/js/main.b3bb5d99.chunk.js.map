{"version":3,"sources":["ui/svgs/AndroidLogo.js","ui/navigation/SocialButton.js","ui/navigation/Navigation.js","assets/self_picture.png","ui/home/Landing.js","ui/home/Presentation.js","ui/home/Header.js","ui/common/AppTag.js","ui/common/LabelWithTags.js","ui/common/CenterCropImage.js","ui/home/AppProject.js","assets/projectImages/bill_splitter.jpg","assets/projectImages/calcul_it.jpg","assets/projectImages/ShaRide.jpg","ui/home/RecentProjects.js","ui/home/Home.js","ui/apps/AppBox.js","ui/apps/Apps.js","ui/contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["AndroidLogo","styled","div","props","color","socialWidth","isOnTop","drawerOpened","NavLink","backgroundColor","showEmailError","showMessageError","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ProdContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAqBeA,I,ECKf,I,IAAeC,IAAOC,IAAV,6/CA4CE,SAACC,GACP,OAAOA,EAAMC,SAKN,SAACD,GAAD,OAAWA,EAAME,YAAc,QAkB9B,SAACF,GACP,OAAOA,EAAMC,SAMN,SAACD,GAAD,OAAWA,EAAME,YAAc,Q,MChBhD,I,EAAeJ,IAAOC,IAAV,yxHAIY,qBAAGI,QACT,mBAAqB,aACrB,qBAAGA,QAAyB,OAAS,wBAwH9B,SAACH,GAAD,2BACKA,EAAMI,aAAe,KAAO,QADjC,QA8BF,SAACJ,GAAD,OAAYA,EAAMI,aAAe,QAAU,UAgBhDN,YAAOO,IAAPP,CAAH,wsBCjQA,ICiCf,I,EAAkBA,IAAOC,IAAV,siECZf,I,EAAkBD,IAAOC,IAAV,ilBCTf,I,EAAkBD,IAAOC,IAAV,8kBCLf,I,EAAkBD,IAAOC,IAAV,6PAIS,SAACC,GAAD,OAAWA,EAAMM,mBCMzC,I,EAAkBR,IAAOC,IAAV,kXCNf,I,EAAkBD,IAAOC,IAAV,4UCiBf,I,EAAkBD,IAAOC,IAAV,iyDC5BA,ICAA,ICAA,ICmBf,I,EAAkBD,IAAOC,IAAV,gUCHf,I,IAAeD,IAAOC,IAAV,yECGZ,I,EAAkBD,IAAOC,IAAV,4rBAmCOD,IAAOC,IAAV,+VCvCnB,I,IAAsBD,IAAOC,IAAV,8b,MCuCDD,IAAOC,IAAV,2hDAqBc,qBAAGQ,eACC,QAAU,UAId,qBAAGC,iBACG,QAAU,UAwCxBV,IAAOW,OAAV,8V,WC3FHC,I,EClBAC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGRQ,G,MAAgBtB,IAAOC,IAAV,iRAWnBsB,IAASC,OACL,cAAC,IAAMC,WAAP,UAEQ,cAACH,EAAD,UACI,kEAMZI,SAASC,eAAe,SAM5Bd,M","file":"static/js/main.b3bb5d99.chunk.js","sourcesContent":["import * as React from \"react\"\r\n\r\nfunction AndroidLogo(props) {\r\n  return (\r\n    <svg\r\n      width={66}\r\n      height={79}\r\n      viewBox=\"0 0 66 79\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <title>Android logo</title>\r\n      <path\r\n        d=\"M13.2 26.333l.003 31.087a5.124 5.124 0 005.138 5.122H19.8V74.2c0 2.646 2.333 4.799 4.983 4.799 2.66 0 4.917-2.153 4.917-4.802V62.542h6.6V74.2c0 2.646 2.333 4.799 4.986 4.799 2.66 0 4.914-2.153 4.914-4.802V62.542l1.465-.004a5.13 5.13 0 005.135-5.125v-31.08H13.2zM66 31.175c0-2.65-2.294-4.842-4.95-4.842-2.656-.003-4.95 2.196-4.95 4.846v20.099c0 2.653 2.29 4.68 4.95 4.68 2.657 0 4.95-2.024 4.95-4.68V31.175zm-56.1 0c0-2.65-2.294-4.842-4.95-4.842C2.293 26.33 0 28.53 0 31.18v20.099c0 2.653 2.29 4.68 4.95 4.68 2.656 0 4.95-2.024 4.95-4.68V31.175zM42.738 7.107L45.84.987C46.065.553 45.778 0 45.302 0a.611.611 0 00-.54.346l-3.133 6.181c-5.052-2.426-11.695-2.672-17.255 0L21.239.346A.604.604 0 0020.698 0c-.476 0-.763.553-.538.988l3.102 6.119C17.173 10.51 13.2 15.612 13.2 23.038h39.6c0-7.426-3.973-12.528-10.062-15.931zm-17.985 9.351c-.91 0-1.653-.737-1.653-1.645a1.65 1.65 0 013.3 0c0 .908-.736 1.645-1.647 1.645zm16.494 0a1.646 1.646 0 110-3.291c.91 0 1.653.744 1.653 1.646 0 .908-.742 1.645-1.653 1.645z\"\r\n        fill=\"#fff\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default AndroidLogo\r\n","import React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nfunction SocialButton({ svgComponent, color, socialName, url }) {\r\n  const [socialWidth, setSocialWidth] = useState()\r\n\r\n  useEffect(() => {\r\n    const nameElement = document.getElementById(socialName)\r\n    const width = nameElement.clientWidth\r\n    setSocialWidth(width)\r\n  }, [socialWidth, socialName])\r\n\r\n  return (\r\n    <Styles\r\n      socialWidth={socialWidth}\r\n      color={color}\r\n      onClick={() => window.open(url, \"_blank\")}\r\n    >\r\n      {svgComponent()}\r\n      <div className=\"social-name-container\">\r\n        <h1 id={socialName}>{socialName}</h1>\r\n      </div>\r\n    </Styles>\r\n  )\r\n}\r\n\r\nconst Styles = styled.div`\r\n  transition: all 0.5s ease;\r\n  padding: 5px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0);\r\n  border-radius: 7px;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  overflow: hidden;\r\n\r\n  .social-name-container {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    transition: all 0.5s ease;\r\n    width: 0;\r\n    overflow: hidden;\r\n  }\r\n\r\n  svg {\r\n    height: 30px;\r\n    width: 30px;\r\n    fill: white;\r\n    transition: all 0.5s ease;\r\n  }\r\n\r\n  h1 {\r\n    user-select: none;\r\n    font-size: 1.4em;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    background-color: white;\r\n    border: 2px solid #20293f;\r\n    padding: 7px;\r\n\r\n    &:active {\r\n      transition: all 0.25s ease;\r\n      background-color: gray;\r\n    }\r\n\r\n    svg {\r\n      fill: ${(props) => {\r\n        return props.color\r\n      }};\r\n    }\r\n\r\n    .social-name-container {\r\n      width: ${(props) => props.socialWidth + \"px\"};\r\n      margin-left: 5px;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    &:hover {\r\n      transition: all 0.5s ease;\r\n      background-color: rgba(255, 255, 255, 1);\r\n\r\n      &:active {\r\n        transition: all 0.25s ease;\r\n        background-color: rgba(255, 255, 255, 0.6);\r\n      }\r\n\r\n      svg {\r\n        transition: all 0.5s ease;\r\n        fill: ${(props) => {\r\n          return props.color\r\n        }};\r\n      }\r\n\r\n      .social-name-container {\r\n        transition: all 0.5s ease;\r\n        width: ${(props) => props.socialWidth + \"px\"};\r\n        overflow: visible;\r\n        margin-left: 5px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default SocialButton\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport socials from \"./../../data/socials\"\r\nimport SocialButton from \"./SocialButton\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\n\r\nfunction Navigation() {\r\n    const [drawerOpened, setDrawerOpened] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({\r\n        query: \"(max-width: 768px)\",\r\n    })\r\n\r\n    const [isOnTop, setOnTop] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (!isMobile) {\r\n            document.addEventListener(\"scroll\", (e) => {\r\n                const scrollTop = window.scrollY\r\n                setOnTop(scrollTop === 0)\r\n            })\r\n        }\r\n    }, [isMobile])\r\n\r\n    const onLinkClickListener = () => {\r\n        setDrawerOpened(false)\r\n    }\r\n\r\n    return (\r\n        <Styles isOnTop={isOnTop} drawerOpened={drawerOpened}>\r\n            <div\r\n                className=\"mobile-scrim\"\r\n                onClick={() => setDrawerOpened(false)}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <div\r\n                    className={`hamburger-button ${\r\n                        drawerOpened ? \"opened\" : \"closed\"\r\n                    }`}\r\n                    onClick={() => setDrawerOpened(!drawerOpened)}\r\n                >\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                </div>\r\n\r\n                <div className=\"socials-container\">\r\n                    {socials.map((social, i) => (\r\n                        <SocialButton key={i} {...social} />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"links-container\">\r\n                    <MyNavLink\r\n                        onClick={onLinkClickListener}\r\n                        activeClassName=\"active-link\"\r\n                        exact\r\n                        to=\"/\"\r\n                    >\r\n                        Accueil\r\n                    </MyNavLink>\r\n                    <MyNavLink\r\n                        onClick={onLinkClickListener}\r\n                        activeClassName=\"active-link\"\r\n                        exact\r\n                        to=\"/apps\"\r\n                    >\r\n                        Applications\r\n                    </MyNavLink>\r\n                    <MyNavLink\r\n                        onClick={onLinkClickListener}\r\n                        activeClassName=\"active-link\"\r\n                        exact\r\n                        to=\"/contact\"\r\n                    >\r\n                        Contact\r\n                    </MyNavLink>\r\n                </div>\r\n            </div>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst Styles = styled.div`\r\n    transition: all 0.25s ease;\r\n    z-index: 1;\r\n    position: fixed;\r\n    background-color: ${({ isOnTop }) =>\r\n        isOnTop ? \"rgba(0, 0, 0, 0)\" : \"#161b26\"};\r\n    box-shadow: ${({ isOnTop }) => (isOnTop ? \"none\" : \"0px 0px 10px black\")};\r\n    top: 0;\r\n\r\n    .mobile-scrim {\r\n        transition: all 0.5s ease;\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: none;\r\n        position: fixed;\r\n    }\r\n\r\n    .hamburger-button {\r\n        display: none;\r\n        position: absolute;\r\n        transition: all 0.5s ease;\r\n        top: 15px;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        gap: 8px;\r\n        align-items: center;\r\n        padding: 15px;\r\n        border-radius: 10px;\r\n\r\n        div {\r\n            transition: all 0.5s ease;\r\n            height: 3px;\r\n            width: 30px;\r\n        }\r\n    }\r\n\r\n    .hamburger-button.opened {\r\n        right: 15px;\r\n        transform: translateX(0%);\r\n        background-color: white;\r\n\r\n        div {\r\n            background-color: #20293f;\r\n        }\r\n\r\n        div:nth-child(1) {\r\n            transform: rotate(-45deg) translateX(-5px);\r\n            height: 6px;\r\n        }\r\n\r\n        div:nth-child(2) {\r\n            transform: rotate(-45deg) translateX(-5px);\r\n            opacity: 0;\r\n        }\r\n\r\n        div:nth-child(3) {\r\n            transform: rotate(45deg) translateX(-5px);\r\n            height: 6px;\r\n        }\r\n    }\r\n\r\n    .hamburger-button.closed {\r\n        right: -15px;\r\n        transform: translateX(100%);\r\n        background-color: #161b26;\r\n\r\n        div {\r\n            background-color: white;\r\n        }\r\n\r\n        div:nth-child(1) {\r\n            transform: rotate(0deg) translateX(0px);\r\n            height: 3px;\r\n        }\r\n\r\n        div:nth-child(2) {\r\n            transform: rotate(0deg) translateX(0px);\r\n            opacity: 1;\r\n        }\r\n\r\n        div:nth-child(3) {\r\n            transform: rotate(0deg) translateX(0px);\r\n            height: 3px;\r\n        }\r\n    }\r\n\r\n    .container {\r\n        position: relative;\r\n        display: flex;\r\n        height: 80px;\r\n        width: 100vw;\r\n    }\r\n\r\n    .links-container {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        position: relative;\r\n        font-size: 1.3em;\r\n        color: white;\r\n        display: flex;\r\n        margin-left: auto;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        width: 50%;\r\n        height: 100%;\r\n    }\r\n\r\n    .socials-container {\r\n        margin-left: 40px;\r\n        display: flex;\r\n        gap: 40px;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .container {\r\n            position: fixed;\r\n            height: 100vh;\r\n            min-width: 200px;\r\n            width: 60%;\r\n            max-width: 300px;\r\n            background-color: white;\r\n            transition: all 0.5s ease;\r\n            flex-direction: column-reverse;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            transform: ${(props) =>\r\n                `translateX(${props.drawerOpened ? \"0%\" : \"-101%\"})`};\r\n        }\r\n\r\n        .links-container {\r\n            font-size: 1.6em;\r\n            position: relative;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n            margin-top: 70px;\r\n            width: 100%;\r\n            height: fit-content;\r\n            gap: 50px;\r\n            margin-left: 0;\r\n        }\r\n\r\n        .socials-container {\r\n            margin: 0;\r\n            margin-left: 10%;\r\n            flex-direction: column;\r\n            align-self: flex-start;\r\n            align-items: flex-start;\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        .hamburger-button {\r\n            display: flex;\r\n        }\r\n\r\n        .mobile-scrim {\r\n            display: ${(props) => (props.drawerOpened ? \"block\" : \"none\")};\r\n        }\r\n    }\r\n\r\n    .active-link {\r\n        opacity: 1;\r\n        &::after {\r\n            width: 100%auto;\r\n        }\r\n    }\r\n\r\n    .active-link::after {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst MyNavLink = styled(NavLink)`\r\n    position: relative;\r\n    text-decoration: none;\r\n    user-select: none;\r\n\r\n    color: white;\r\n    opacity: 0.5;\r\n    transition: all 0.5s ease;\r\n\r\n    &::after {\r\n        border-radius: 5px;\r\n        position: absolute;\r\n        bottom: -5px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        content: \"\";\r\n        width: 0px;\r\n        height: 1px;\r\n        transition: all 0.5s ease;\r\n        background-color: white;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        color: #20293f;\r\n        &::after {\r\n            background-color: #20293f;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    &:hover::after {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport default Navigation\r\n","export default __webpack_public_path__ + \"static/media/self_picture.136a6783.png\";","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ProfileImage from \"../../assets/self_picture.png\"\r\nimport { AndroidLogo } from \"../svgs\"\r\n\r\nfunction Landing() {\r\n    return (\r\n        <Container>\r\n            <img\r\n                data-aos=\"fade-up\"\r\n                data-aos-duration=\"1500\"\r\n                className=\"profile-image\"\r\n                src={ProfileImage}\r\n                alt=\"Me standing\"\r\n            />\r\n            <div className=\"container-text\">\r\n                <div className=\"container-name\">\r\n                    <p className=\"text-name\">David Dekeuwer</p>\r\n                </div>\r\n\r\n                <h2 className=\"text-developer\">\r\n                    Développeur <span>d'application</span>\r\n                </h2>\r\n\r\n                <div className=\"container-android\">\r\n                    <h1 className=\"text-android\">Android</h1>\r\n                    <AndroidLogo className=\"logo-android\" />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-self: center;\r\n    width: 90%;\r\n    max-width: 1100px;\r\n    height: 100vh;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .container-text {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-top: 10%;\r\n        color: white;\r\n        flex-grow: 1;\r\n        align-self: center;\r\n        text-align: start;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n            Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .container-name {\r\n        transform: translateY(0.8em);\r\n        .text-name {\r\n            font-style: normal;\r\n            font-size: 2.2em;\r\n            font-weight: lighter;\r\n        }\r\n    }\r\n\r\n    .text-developer {\r\n        font-size: 3em;\r\n        font-weight: normal;\r\n    }\r\n\r\n    .container-android {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        margin-top: 0.3em;\r\n        align-self: flex-end;\r\n        font-size: 2.7em;\r\n\r\n        .text-android {\r\n            font-weight: normal;\r\n        }\r\n\r\n        .logo-android {\r\n            * {\r\n                transition: all 0.5s ease;\r\n            }\r\n\r\n            &:hover * {\r\n                transition: all 0.5s ease;\r\n                fill: #3ddb85;\r\n            }\r\n            margin-left: 0.5em;\r\n        }\r\n    }\r\n\r\n    .profile-image {\r\n        flex-shrink: 1;\r\n        object-fit: cover;\r\n        max-width: 25vw;\r\n        min-width: 400px;\r\n    }\r\n\r\n    @media (max-width: 1030px) {\r\n        .container-text {\r\n            font-size: 13px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 948px) and (min-width: 769px) {\r\n        .text-developer span {\r\n            margin-left: 3em;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        height: auto;\r\n\r\n        .container-text {\r\n            transform: translateY(-3em);\r\n        }\r\n    }\r\n\r\n    @media (max-width: 504px) {\r\n        .text-developer span {\r\n            margin-left: 3em;\r\n        }\r\n    }\r\n`\r\n\r\nexport default Landing\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nfunction Presentation() {\r\n    return (\r\n        <Container>\r\n            <div className=\"container-text\">\r\n                <h1>\r\n                    Bonjour, moi c’est David. <br />\r\n                    Ravi de faire votre connaissance.\r\n                </h1>\r\n                <p>\r\n                    Je suis un jeune développeur spécialisé dans le\r\n                    développement d’applications Android et suis également\r\n                    interessé dans le développement d’applications Web.\r\n                </p>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    color: white;\r\n    background-color: #161b26;\r\n    margin-top: 50px;\r\n\r\n    .container-text {\r\n        margin: auto;\r\n        width: 90%;\r\n        max-width: 700px;\r\n        font-size: 33px;\r\n        margin-top: 3em;\r\n        margin-bottom: 3em;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n\r\n        h1 {\r\n            font-size: 1em;\r\n        }\r\n\r\n        p {\r\n            margin-top: 1.2em;\r\n            font-size: 0.7em;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .container-text {\r\n            font-size: 29px;\r\n        }\r\n    }\r\n`\r\n\r\nexport default Presentation\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nfunction Header({ title }) {\r\n    return (\r\n        <Container>\r\n            <h1 className=\"title\">{title}</h1>\r\n            <div className=\"line\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-self: flex-start;\r\n    color: white;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n        Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n\r\n    font-size: 20px;\r\n\r\n    .title {\r\n        font-weight: lighter;\r\n        align-self: flex-end;\r\n        margin-right: 0.2em;\r\n        margin-left: 0.5em;\r\n    }\r\n\r\n    .line {\r\n        border-radius: 0px 999px 999px 0px;\r\n        background-color: white;\r\n        height: 3px;\r\n        width: auto;\r\n    }\r\n`\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nfunction AppTag({ tag }) {\r\n    return <Container backgroundColor={tag.color}>{tag.label}</Container>\r\n}\r\n\r\nconst Container = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    background-color: ${(props) => props.backgroundColor};\r\n    display: inline-block;\r\n    border-radius: 999px;\r\n    padding: 0.15em 0.9em 0.15em 0.9em;\r\n    white-space: nowrap;\r\n`\r\n\r\nexport default AppTag\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport AppTag from \"./AppTag\"\r\n\r\nfunction LabelWithTags({ label, tags }) {\r\n    return (\r\n        <Container>\r\n            <h2>{label}</h2>\r\n            <div className=\"tags-container\">\r\n                {tags.map((tag, index) => {\r\n                    return <AppTag tag={tag} key={index} />\r\n                })}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 0.5em;\r\n\r\n    h2 {\r\n        font-weight: 400;\r\n        font-size: 1.3em;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-align: start;\r\n    }\r\n\r\n    .tags-container {\r\n        display: flex;\r\n        gap: 0.5em;\r\n        font-size: 0.8em;\r\n    }\r\n`\r\n\r\nexport default LabelWithTags\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nfunction CenterCropImage({ image, alt }) {\r\n    return (\r\n        <Container>\r\n            <img src={image} alt={alt} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n\r\n    img {\r\n        position: absolute;\r\n        left: -1000%;\r\n        right: -1000%;\r\n        top: -1000%;\r\n        bottom: -1000%;\r\n        margin: auto;\r\n        min-height: 100%;\r\n        min-width: 100%;\r\n    }\r\n`\r\n\r\nexport default CenterCropImage\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport LabelWithTags from \"../common/LabelWithTags\"\r\nimport CenterCropImage from \"../common/CenterCropImage\"\r\nimport GithubLogo from \"../svgs/GithubLogo\"\r\n\r\nfunction AppProject({ app }) {\r\n    return (\r\n        <Container>\r\n            <div className=\"image-container\">\r\n                <CenterCropImage image={app.image} />\r\n            </div>\r\n            <div className=\"info-container\">\r\n                <LabelWithTags label={app.appName} tags={app.tags} />\r\n                <p className=\"content description\">{app.description}</p>\r\n                <h2 className=\"technologies-title\">Technologies</h2>\r\n                <p className=\"content technologies-content\">\r\n                    {app.technologies.join(\", \")}\r\n                </p>\r\n                <div className=\"more-info-button\">\r\n                    <div className=\"more-info-text\">Plus d'infos</div>\r\n                    <GithubLogo />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    border-radius: 23px;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    max-width: 450px;\r\n    width: 90vw;\r\n    height: 600px;\r\n    text-align: start;\r\n\r\n    .image-container {\r\n        flex-grow: 2;\r\n    }\r\n\r\n    .info-container {\r\n        flex-grow: 1;\r\n        padding: 30px;\r\n        display: inline-flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n        font-size: 19px;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n            Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    }\r\n\r\n    .technologies-title {\r\n        font-size: 1.2em;\r\n        font-style: normal;\r\n        font-weight: 400;\r\n    }\r\n\r\n    .content {\r\n        font-size: 1em;\r\n    }\r\n\r\n    .more-info-button {\r\n        align-items: center;\r\n        justify-content: center;\r\n        display: flex;\r\n        position: absolute;\r\n        bottom: 30px;\r\n        margin: auto;\r\n        left: 0px;\r\n        right: 0px;\r\n        width: 70%;\r\n        max-width: 250px;\r\n        background-color: #1f273d;\r\n        border-radius: 999px;\r\n        color: white;\r\n        fill: white;\r\n        font-size: 20px;\r\n        padding: 0.5em 0em 0.5em 0em;\r\n        box-shadow: 0px 0px 3px black;\r\n        transition: all 0.5s ease;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            transform: scale(1.05);\r\n        }\r\n\r\n        &:active {\r\n            transform: scale(1.025);\r\n        }\r\n\r\n        .more-info-text {\r\n            justify-self: center;\r\n            user-select: none;\r\n        }\r\n\r\n        svg {\r\n            position: absolute;\r\n            right: 0px;\r\n            margin-right: 1em;\r\n            width: 1.5em;\r\n            height: 1.5em;\r\n        }\r\n    }\r\n`\r\n\r\nexport default AppProject\r\n","export default __webpack_public_path__ + \"static/media/bill_splitter.d5037480.jpg\";","export default __webpack_public_path__ + \"static/media/calcul_it.90586976.jpg\";","export default __webpack_public_path__ + \"static/media/ShaRide.75576b79.jpg\";","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Header from \"./Header\"\r\nimport AppProject from \"./AppProject\"\r\nimport apps from \"../../data/apps\"\r\n\r\nfunction RecentProjects() {\r\n    return (\r\n        <Container>\r\n            <Header title=\"Mes projets récents\" />\r\n\r\n            <div className=\"projects-container\">\r\n                <AppProject app={apps[2]} />\r\n                <AppProject app={apps[3]} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    align-items: center;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    margin-top: 50px;\r\n\r\n    .projects-container {\r\n        margin-top: 70px;\r\n        display: flex;\r\n        justify-content: center;\r\n        gap: 70px;\r\n        flex-wrap: wrap;\r\n    }\r\n`\r\n\r\nexport default RecentProjects\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Landing from \"./Landing\"\r\nimport Presentation from \"./Presentation\"\r\nimport RecentProjects from \"./RecentProjects\"\r\n\r\nfunction Home() {\r\n  return (\r\n    <Styles>\r\n      <Landing />\r\n      <Presentation />\r\n      <RecentProjects />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nconst Styles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport default Home\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport LabelWithTags from \"../common/LabelWithTags\"\r\nimport CenterCropImage from \"../common/CenterCropImage\"\r\n\r\nfunction AppBox({ app: { image, appName, tags, description } }) {\r\n    return (\r\n        <Container>\r\n            <div className=\"image-container\">\r\n                <CenterCropImage image={image} alt={appName + \" image\"} />\r\n            </div>\r\n            <InfoContainer>\r\n                <LabelWithTags label={appName} tags={tags} />\r\n                <p>{description}</p>\r\n            </InfoContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 15px;\r\n    transition: all 0.5s ease;\r\n\r\n    .image-container {\r\n        width: 100%;\r\n        flex: 1;\r\n        max-height: 120px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            transition: all 0.5s ease;\r\n            transform: scale(1.05);\r\n        }\r\n\r\n        &:active {\r\n            transition: all 0.25s ease;\r\n            transform: scale(1.025);\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        &:active {\r\n            transition: all 0.25s ease;\r\n            transform: scale(0.975);\r\n        }\r\n    }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n    background-color: white;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    display: flex;\r\n    padding: 15px;\r\n    color: black;\r\n    gap: 0.5em;\r\n    font-size: 16px;\r\n\r\n    p {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-align: start;\r\n        line-height: 1.2em;\r\n        font-size: 1em;\r\n    }\r\n`\r\n\r\nexport default AppBox\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport AppBox from \"./AppBox\"\r\nimport apps from \"./../../data/apps\"\r\n\r\nfunction Apps() {\r\n    return (\r\n        <AppsContainer>\r\n            {apps.map((app, index) => {\r\n                return <AppBox app={app} key={index} />\r\n            })}\r\n        </AppsContainer>\r\n    )\r\n}\r\n\r\nconst AppsContainer = styled.div`\r\n    position: relative;\r\n    padding-top: 110px;\r\n    width: 80vw;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    grid-template-columns: repeat(auto-fit, 300px);\r\n    display: grid;\r\n    grid-gap: 30px;\r\n    align-content: flex-start;\r\n    justify-content: center;\r\n    grid-auto-rows: 275px;\r\n    padding-bottom: 30px;\r\n\r\n    @media (max-width: 768px) {\r\n        top: 0px;\r\n        padding-top: 80px;\r\n    }\r\n`\r\n\r\nexport default Apps\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useForm } from \"@formspree/react\"\r\n\r\nfunction Contact() {\r\n    const [state, handleSubmit] = useForm(\"contactForm\")\r\n\r\n    console.log(state)\r\n\r\n    const showEmailError = state.errors.find((e) => e.field === \"email\")\r\n    const showMessageError = state.errors.find((e) => e.field === \"message\")\r\n\r\n    return (\r\n        <Container\r\n            showEmailError={showEmailError}\r\n            showMessageError={showMessageError}\r\n        >\r\n            <h1 className=\"title\">Envoyez-moi un message</h1>\r\n            <form method=\"post\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <p className=\"error-text email\">Un email est requis</p>\r\n                    <input\r\n                        className=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"subject\"\r\n                        name=\"subject\"\r\n                        placeholder=\"Objet\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-container\">\r\n                    <p className=\"error-text message\">Un message est requis</p>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"message\"\r\n                        name=\"message\"\r\n                        placeholder=\"Message\"\r\n                    />\r\n                </div>\r\n\r\n                <SubmitButton type=\"submit\">Envoyer</SubmitButton>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    margin: auto;\r\n    width: 90vw;\r\n    max-width: 600px;\r\n    min-height: 100vh;\r\n    text-align: center;\r\n    color: white;\r\n    padding-top: 100px;\r\n\r\n    .input-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n\r\n        .error-text {\r\n            transition: all 0.5s ease;\r\n            font-size: 0.8em;\r\n            margin-left: 1em;\r\n        }\r\n\r\n        .error-text.email {\r\n            margin-bottom: ${({ showEmailError }) =>\r\n                showEmailError ? \"0.3em\" : \"-1em\"};\r\n        }\r\n\r\n        .error-text.message {\r\n            margin-bottom: ${({ showMessageError }) =>\r\n                showMessageError ? \"0.3em\" : \"-1em\"};\r\n        }\r\n    }\r\n\r\n    .title {\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n            Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n        font-weight: lighter;\r\n        font-size: 3.2em;\r\n    }\r\n\r\n    form {\r\n        margin-top: 50px;\r\n        align-items: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-size: 20px;\r\n        gap: 10px;\r\n    }\r\n\r\n    input,\r\n    textarea {\r\n        border: none;\r\n        width: 90vw !important;\r\n        max-width: 500px;\r\n        background-color: #161b26;\r\n        color: white;\r\n        font-size: 1em;\r\n        padding: 0.6em 0.8em;\r\n        border-radius: 7px;\r\n        resize: none;\r\n        box-shadow: 0px 0px 3px black;\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n            Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    }\r\n    textarea.message {\r\n        min-height: 230px;\r\n    }\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n    background-color: #161b26;\r\n    color: white;\r\n    border: 1px solid white;\r\n    border-radius: 999px;\r\n    font-size: 1em;\r\n    padding: 0.2em 1.2em;\r\n    margin-top: 1em;\r\n    margin-bottom: 40px;\r\n    transition: all 0.25s linear;\r\n\r\n    &:hover {\r\n        background-color: white;\r\n        color: #161b26;\r\n    }\r\n`\r\n\r\nexport default Contact\r\n","import \"./App.css\"\nimport { useEffect } from \"react\"\nimport Navigation from \"./ui/navigation/Navigation\"\nimport Home from \"./ui/home/Home\"\nimport Apps from \"./ui/apps/Apps\"\nimport Contact from \"./ui/contact/Contact\"\nimport Aos from \"aos\"\nimport { FormspreeProvider } from \"@formspree/react\"\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\"\n\nfunction App() {\n    useEffect(() => {\n        Aos.init()\n    }, [])\n    return (\n        <FormspreeProvider project=\"1701476863047630380\">\n            <div className=\"App\">\n                <Router>\n                    <Navigation />\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/apps\" component={Apps} />\n                        <Route exact path=\"/contact\" component={Contact} />\n                    </Switch>\n                </Router>\n            </div>\n        </FormspreeProvider>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"aos/dist/aos.css\"\nimport styled from \"styled-components\"\n\nconst isProductionMode = process.env.NODE_ENV === \"production\"\n\nconst ProdContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    width: 100vw;\n    min-height: 100vh;\n    background: linear-gradient(180.29deg, #20293f 0.25%, #0a0d14 162.58%);\n`\n\nReactDOM.render(\n    <React.StrictMode>\n        {isProductionMode ? (\n            <ProdContainer>\n                <h1>Portfolio en construction...</h1>\n            </ProdContainer>\n        ) : (\n            <App />\n        )}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}